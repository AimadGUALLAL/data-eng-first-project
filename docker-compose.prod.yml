version: '3.8'

x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  image: crypto-airflow:latest
  user: "50000:0"
  environment:
    &airflow-common-env
    # Executor
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    
    # Security
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
    
    # Configuration
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'false'
    AIRFLOW__WEBSERVER__RBAC: 'true'
    
    # Performance optimizations for t3.small
    AIRFLOW__CORE__PARALLELISM: 4
    AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 4
    AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG: 2
    AIRFLOW__SCHEDULER__MAX_THREADS: 2
    AIRFLOW__WEBSERVER__WORKERS: 2
    AIRFLOW__WEBSERVER__WORKER_REFRESH_INTERVAL: 1800
    
    # Logging
    AIRFLOW__LOGGING__LOGGING_LEVEL: INFO
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'false'
    
    # AWS Credentials
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - .:/opt/airflow/crypto-data-pipeline
  depends_on:
    postgres:
      condition: service_healthy

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: crypto-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: airflow
      POSTGRES_INITDB_ARGS: "-E UTF8"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    mem_limit: 512m
    mem_reservation: 256m
    command: >
      postgres
      -c shared_buffers=256MB
      -c max_connections=100
      -c work_mem=8MB
      -c maintenance_work_mem=64MB

  # Airflow Init
  airflow-init:
    <<: *airflow-common
    container_name: crypto-airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/logs /opt/airflow/dags /opt/airflow/plugins
        chown -R 50000:0 /opt/airflow/{logs,dags,plugins}
        
        echo "Waiting for postgres..."
        until pg_isready -h postgres -U airflow; do
          sleep 2
        done
        
        echo "Initializing database..."
        airflow db migrate
        
        echo "Creating admin user..."
        airflow users create \
          --username ${AIRFLOW_ADMIN_USERNAME} \
          --firstname ${AIRFLOW_ADMIN_FIRSTNAME:-Admin} \
          --lastname ${AIRFLOW_ADMIN_LASTNAME:-User} \
          --role Admin \
          --email ${AIRFLOW_ADMIN_EMAIL} \
          --password ${AIRFLOW_ADMIN_PASSWORD} || echo "User already exists"
        
        echo "âœ… Initialization complete!"
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
    user: "0:0"
    mem_limit: 512m

  # Airflow Webserver
  airflow-webserver:
    <<: *airflow-common
    container_name: crypto-airflow-webserver
    command: webserver
    ports:
      - "${AIRFLOW_WEBSERVER_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    mem_limit: 768m
    mem_reservation: 512m
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  # Airflow Scheduler
  airflow-scheduler:
    <<: *airflow-common
    container_name: crypto-airflow-scheduler
    command: scheduler
    healthcheck:
      test: ["CMD", "airflow", "jobs", "check", "--job-type", "SchedulerJob", "--hostname", "$${HOSTNAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    mem_limit: 768m
    mem_reservation: 512m
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres-db-volume:
    driver: local

networks:
  default:
    name: crypto-airflow-network